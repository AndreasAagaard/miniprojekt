@page "/bookingoversigt"
@using miniprojekt.Shared
@inject HttpClient Http
@inject NavigationManager uriHelper
@inject IJSRuntime JsRuntime

<h1>Bookingoversigt</h1>

<br />
<p>Her ses alle bookinger af shelters.</p>


@if (bookings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <head>
        <title>Booking</title>
        <style>
            .tableFixHead {
                overflow-y: auto;
                height: 450px;
                overflow-x: auto;
                width: 1000px;
                border-radius: 0.5%;
            }

                .tableFixHead thead th {
                    position: sticky;
                    top: 0;
                }

            table {
                border-collapse: collapse;
                width: 100%;
            }

            td {
                padding: 8px 16px;
                border: 1px solid #ccc;
                background: #91b247;
            }

            th {
                padding: 8px 16px;
                border: 1px solid #ccc;
                background: #597c2b;
            }
        </style>
    </head>

    <body>
        <div class="tableFixHead">
            <table>
                <thead>
                    <tr>
                        <th>Startdate</th>
                        <th>Slutdato</th>
                        <th>Antal personer</th>
                        <th>Navn</th>
                        <th>Telefonnummer</th>
                        <th>Email</th>
                        <th>Shelter navn</th>
                        <th>Slet Booking</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var booking in bookings)
                    {
                        <tr>
                            <td>@booking.startdate.Date.ToString("dd/MM/yyyy")</td>
                            <td>@booking.slutdate.Date.ToString("dd/MM/yyyy")</td>
                            <td>@booking.antal_pers</td>
                            <td>@booking.navn</td>
                            <td>@booking.telefon</td>
                            <td>@booking.email</td>
                            <td>@booking.shelter_navn</td>
                            <td><button type="button" class="btn btn-outline-danger btn-sm" @onclick="() => deleteControl(booking)">Slet Booking</button></td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </body>
}

@code {
    private shelter shelly;
    private Booking[] bookings;
    public Booking testBook = new() { booking_date = DateTime.Now };

    private async void deleteControl(Booking book)
    {
        await deleteBooking(book);
        uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
    }

    protected override async Task OnInitializedAsync()
    {
        bookings = await Http.GetFromJsonAsync<Booking[]>("Booking");
    }

    public async Task getShelter(string id)
    {
        shelly = await Http.GetFromJsonAsync<shelter>($"Shelter/{id}");

    }

    protected async Task deleteBooking(Booking book)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Er du sikker på, at du vil slette bookingen?");
        if (confirmed)
        {
            await Http.DeleteAsync($"Booking/{book._id}");
        }
    }


}
