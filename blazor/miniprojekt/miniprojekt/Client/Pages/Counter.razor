@using System.Collections.Generic;
@using miniprojekt.Shared
@inject HttpClient Http
@page "/shelterbooking"

<h1>Shelteroversigt</h1>

<p>Her kan du se alle shelters og foretage bookinger.<br /><b>Bemærk!</b> En booking er gyldig fra kl. 12.00 på startdatoen til kl. 12.00 på slutdatoen.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <head>
        <title>Shelter booking</title>
        <style>
            .tableFixHead {
                overflow-y: auto;
                height: 450px;
                overflow-x: auto;
                width: 1000px;
            }

                .tableFixHead thead th {
                    position: sticky;
                    top: 0;
                }

            table {
                border-collapse: collapse;
                width: 100%;
            }

            td {
                padding: 8px 16px;
                border: 1px solid #ccc;
                background: #91b247;
            }

            th {
                padding: 8px 16px;
                border: 1px solid #ccc;
                background: #597c2b;
            }
        </style>
    </head>


    <body>
        <div class="tableFixHead">
            <table>
                <thead>
                    <tr>
                        <th>Navn</th>
                        <th>Cvr-navn</th>
                        <th>Kommunekode</th>
                        <th>Antal pladser</th>
                        <th>Koordinater</th>
                        <th>@forecasts</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in forecasts)
                    {
                        Console.WriteLine(string.Join("\t", forecast));
                        <tr>
                            <td>@forecast.properties.navn</td>
                            <td>@forecast.properties.cvr_navn</td>
                            <td>@forecast.properties.kommunekode</td>
                            <td>@forecast.properties.antal_pl</td>
                            <td>@forecast.geometry.coordinates</td>
                            <td><button type="button" class="btn btn-outline-dark btn-sm" @onclick="() => OpenBookDialog()">Book</button></td>
                        </tr>
                    }
                    <tr>
                        <td>@forecasts</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>

    @if (BookDialogOpen)
    {
        <miniprojekt.Client.Components.ModalDialog Title="Du er ved at booke nedenstående" Text="Bekræft booking ved at trykke OK" OnClose="@OnBookDialogClose"></miniprojekt.Client.Components.ModalDialog>
    }

}





@code {
    //List<string> shelterliste = new List<string>() { "Shelter1", "Shelter2", "Shelter3" };


    private shelter[] forecasts;

    public bool BookDialogOpen { get; set; }

    private void OnBookDialogClose(bool accepted)
    {
        BookDialogOpen = false;
        StateHasChanged();
    }

    private void OpenBookDialog()
    {
        BookDialogOpen = true;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<shelter[]>("WeatherForecast");


    }
    Booking testBook = new Booking(DateTime.Now, DateTime.Now.AddDays(1), 5, "Placeholder", "sadjsaBruger");




}
